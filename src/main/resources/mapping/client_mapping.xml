<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.endwork.mapper.ClientMapper">

    <select id="getAClient"
            resultType="com.endwork.entity.Client">
        select * from `client`
        where client_id=#{client_id} and client_pwd=#{client_pwd}
    </select>

    <select id="getClientOrderList"
            resultType="com.endwork.entity.Order">
        select o.*, s.store_id, s.store_name, c.client_name from `order` o
        INNER JOIN store s ON s.store_id = o.store_id
        INNER JOIN `client` c ON c.client_id=o.client_id
        where c.client_id=#{client_id}
        and order_status=#{order_status}
        and 1=1
        <if test="field_name != 'all'">
            and ${field_name} like '%${field_value}%'
        </if>
        order by o.order_date desc
        limit #{start}, #{page_size}
    </select>


    <select id="getABaseEditOrder"
            resultType="com.endwork.entity.Order">
        select * from `order`
        where order_id=#{order_id}
    </select>


    <select id="get_order_sale_list"
            resultType="com.endwork.entity.OrderSale">
        select o.*, g.goods_name, g.unit_sale_price from order_sale o
        INNER JOIN goods g ON o.goods_id = g.goods_id
        where order_id=#{order_id}
    </select>


    <select id="get_goods_list_by_condition"
            resultType="com.endwork.entity.Goods">
        select * from goods
        where #{field_name} = #{field_value}
    </select>


    <select id="get_max_order_id" resultType="Object">
        select max(order_id) from `order`
    </select>

    <select id="get_store_goods_list"
            resultType="com.endwork.entity.Goods">
        select g.* from goods g
        inner join `stock` s on s.goods_id = g.goods_id
        where store_id=#{store_id}
    </select>


<!--    <insert id="add_a_order" useGeneratedKeys="true" keyProperty="order_id">-->
<!--       INSERT INTO `order` (store_id, order_price, client_id, order_date)-->
<!--            VALUES(#{store_id}, #{order_price}, #{client_id}, #{order_date}) ;-->
<!--    </insert>-->

    <insert id="add_a_order">
        INSERT INTO `order` (order_id, store_id, order_price, client_id, order_date)
            VALUES(#{order_id}, #{store_id}, #{order_price}, #{client_id}, #{order_date})
    </insert>


    <insert id="add_order_sale">
       INSERT INTO `order_sale` (order_id, goods_id, sale_goods_amount)
            VALUES(#{order_id}, #{goods_id}, #{sale_goods_amount})
    </insert>



    <update id="cancel_client_order_by_order_id">
        update `order`
        set order_status=0
        where order_id=#{order_id}
    </update>


    <update id="save_cancel_date">
        update `order`
        set order_last_cancel_date=#{order_last_cancel_date}
        where order_id=#{order_id}
    </update>


    <update id="recover_client_order">
        update `order`
        set order_status=1
        where order_id=#{order_id}
    </update>


    <update id="consume_recover_client_order_chance">
        UPDATE `order`
        SET recover_chance=(
            SELECT recover_chance
        )-1
        WHERE order_id=#{order_id}
    </update>

    <update id="save_order_sale">
        UPDATE `order_sale`
        SET sale_goods_amount=#{sale_goods_amount}
        WHERE order_id=#{order_id}
        and goods_id=#{goods_id}
    </update>

    <update id="saveAEditClient">
        UPDATE `client`
        set
        <if test="field_name != 'client_id'">
            ${field_name} = #{field_value}
            where `client_id`=#{client_id}
        </if>
        <if test="field_name == 'client_id'">
            ${field_name} = #{field_value}
            where 1!=1
        </if>
    </update>
</mapper>
